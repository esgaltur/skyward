<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.sosnovich</groupId>
    <artifactId>skyward-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>skyward</name>
    <description>skyward</description>
    <packaging>pom</packaging>
    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jakarta.jakartaee-api.version>10.0.0</jakarta.jakartaee-api.version>
        <java.version>${maven-compiler-plugin.source}</java.version>
        <mysql-connector-j.version>8.2.0</mysql-connector-j.version>
        <liquibase-maven-plugin.version>4.25.0</liquibase-maven-plugin.version>
        <maven-compiler-plugin.source>17</maven-compiler-plugin.source>
        <lombok.version>1.18.32</lombok.version>
        <org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
        <spring-ai.version>1.0.0-M1</spring-ai.version>
        <commons-compress.version>1.26.1</commons-compress.version>
        <spring-boot-dependencies.version>3.3.1</spring-boot-dependencies.version>
        <micrometer-registry-prometheus.version>1.13.1</micrometer-registry-prometheus.version>
        <testcontainers-junit-jupiter.version>1.19.8</testcontainers-junit-jupiter.version>
        <liquibase-core.version>4.27.0</liquibase-core.version>
        <opentelemetry-sdk-extension-autoconfigure.version>1.6.0</opentelemetry-sdk-extension-autoconfigure.version>
        <logback-classic.version>1.5.6</logback-classic.version>
        <logstash-logback-encoder.version>7.4</logstash-logback-encoder.version>
        <grpc-netty-shaded.version>1.64.0</grpc-netty-shaded.version>
        <opentelemetry-sdk-extension-autoconfigure.version>1.39.0</opentelemetry-sdk-extension-autoconfigure.version>
        <opentelemetry-sdk.version>1.9.1</opentelemetry-sdk.version>
        <guava.version>32.1.3-android</guava.version>
        <protobuf-java.version>3.25.2</protobuf-java.version>
        <skyward-data.version>0.0.1-SNAPSHOT</skyward-data.version>
        <skyward-tracing.version>0.0.1-SNAPSHOT</skyward-tracing.version>
        <skyward-openapi.version>0.0.1-SNAPSHOT</skyward-openapi.version>
        <bcprov-jdk18on.version>${bcutil-jdk15on.version}</bcprov-jdk18on.version>
        <jjwt.version>0.12.3</jjwt.version>
        <spring-security-jwt.version>1.1.1.RELEASE</spring-security-jwt.version>
        <bcutil-jdk15on.version>1.70</bcutil-jdk15on.version>
        <bcprov-jdk15on.version>1.70</bcprov-jdk15on.version>
        <micrometer-tracing-bridge-brave.version>1.3.1</micrometer-tracing-bridge-brave.version>
        <zipkin-reporter-brave.version>3.4.0</zipkin-reporter-brave.version>
        <xnio-api.version>3.8.16.Final</xnio-api.version>
    </properties>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <version>${spring-boot-dependencies.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.ai</groupId>
            <artifactId>spring-ai-ollama-spring-boot-starter</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakarta.jakartaee-api.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <modules>
        <module>skyward-data</module>
        <module>skyward-openapi</module>
        <module>skyward-tracing</module>
        <module>skyward-server</module>

    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.xnio</groupId>
                <artifactId>xnio-api</artifactId>
                <version>${xnio-api.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom</artifactId>
                <version>${opentelemetry.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bcprov-jdk15on.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk15on</artifactId>
                <version>${bcutil-jdk15on.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcutil-jdk15on</artifactId>
                <version>${bcutil-jdk15on.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback-classic.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf-java.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-bom</artifactId>
                <version>${spring-ai.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <scope>runtime</scope>
                <version>${mysql-connector-j.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.reporter2</groupId>
                <artifactId>zipkin-reporter-brave</artifactId>
                <version>${zipkin-reporter-brave.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-tracing-bridge-brave</artifactId>
                <version>${micrometer-tracing-bridge-brave.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <scope>runtime</scope>
                <version>${micrometer-registry-prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <optional>true</optional>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <scope>test</scope>
                <version>${testcontainers-junit-jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>mysql</artifactId>
                <scope>test</scope>
                <version>${testcontainers-junit-jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.platform</groupId>
                <artifactId>jakarta.jakartaee-api</artifactId>
                <version>${jakarta.jakartaee-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sosnovich</groupId>
                <artifactId>skyward-data</artifactId>
                <version>${skyward-data.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sosnovich</groupId>
                <artifactId>skyward-tracing</artifactId>
                <version>${skyward-tracing.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sosnovich</groupId>
                <artifactId>skyward-openapi</artifactId>
                <version>${skyward-openapi.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>maven_central</id>
            <name>Maven Central</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
    </repositories>
</project>
